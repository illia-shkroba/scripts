#!/usr/bin/env bash

set -eo pipefail

main() {
  if [ "$#" -eq 0 ]; then
    help
    exit
  fi

  subnet=192.168.0.0/24

  while [ "$#" -gt 0 ]; do
    case "$1" in
      '-s' | '--subnet')
        if ! [ "$#" -gt 1 ]; then
          echo 'Missing value for --subnet' >&2
          exit 1
        fi
        subnet="$2"
        shift 2
        ;;
      '-p' | '--port')
        if ! [ "$#" -gt 1 ]; then
          echo 'Missing value for --port' >&2
          exit 1
        fi
        port="$2"
        shift 2
        ;;
      '-h' | '--help')
        help
        exit
        ;;
      '--')
        shift
        break
        ;;
      *)
        break
        ;;
    esac
  done

  if [ -z "$port" ]; then
    echo '--port is required' >&2
    exit 1
  fi

  pid="$(mktemp)"
  trap 'rm "$pid"' EXIT

  discover() {
    xargs -I {} -P 100 nc -zv {} "$port" &
    echo "$!" > "$pid"
  }

  prips "$subnet" | discover |& grep -m 1 'succeeded!' | cut -d ' ' -f 3
  kill "$(cat "$pid")"
  exit 0
}

help() {
  cat >&2 << 'EOF'
discover - find host in <subnet> that has opened <port>

Usage: discover [-s|--subnet <subnet>] [-h|--help] -p|--port <port>

  Find host in <subnet> that has opened <port>. The script prints to STDOUT
  only an IP address of the first discovered host.

Options:
  -s, --subnet   Subnet where a host should be discovered. [Default: 192.168.0.0/24]
  -p, --port     Discover host by checking for an opened port.
  -h, --help     Show this message and exit.
EOF
}

main "$@"
